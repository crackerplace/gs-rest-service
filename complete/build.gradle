apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'nebula.ospackage-base'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE"
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:3.1.0'
    }
}

jar {
    baseName = 'gs-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
}

task fatJar(type: Jar) {
  manifest {
    attributes 'Main-Class': 'hello.Application'
  }
  baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task packDeb(type: Deb, dependsOn: fatJar) {
    packageName = project.name
    version = 1.0

   requires('openjdk-7-jre-headless')
     from('build/libs/.') {
     into "/opt/${project.name}"
  }

  preInstall = file('pkg_scripts/preInstall.sh')
  postInstall = file('pkg_scripts/postInstall.sh')
  postUninstall = file('pkg_scripts/postUninstall.sh')

    from(jar.outputs.files) {
        into 'lib'
    }
    from('build/scripts') {
        into 'bin'
        fileMode = 0550
    }
    from(configurations.runtime) {
        into 'lib'
    }
    from('src/main/resources') {
        fileType CONFIG | NOREPLACE
        into 'conf'
    }

}
